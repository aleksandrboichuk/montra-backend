# types
type Register {
    id: ID!
}

type JWTTokens {
    accessToken: String!
    refreshToken: String!
}

type RefreshTokenPayload {
    id: String!
    email: String!
    refreshToken: String!
}

type SendEmailVerificationLetter {
    success: Boolean!
}

# inputs
input RegisterInput {
    name: String!
    email: String!
    password: String!
}

input LoginInput {
    email: String!
    password: String!
}

input VerifyEmailInput {
    code: String!
}

input SendEmailVerificationLetterInput {
    userId: String!
}


type Query {
    test: String
}

type Mutation {
    register(input: RegisterInput!): Register!
    login(input: LoginInput!): JWTTokens!
    refresh: JWTTokens!
    verifyEmail(input: VerifyEmailInput): JWTTokens!
    sendEmailVerificationLetter(input: SendEmailVerificationLetterInput): SendEmailVerificationLetter!
}
